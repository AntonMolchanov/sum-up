[{"/Users/yamnyk/IdeaProjects/sum-up/client/src/index.js":"1","/Users/yamnyk/IdeaProjects/sum-up/client/src/reportWebVitals.js":"2","/Users/yamnyk/IdeaProjects/sum-up/client/src/App.js":"3","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Home.js":"4","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Header.js":"5","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Footer.js":"6","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Login.js":"7","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/store.js":"8","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/rootReducer.js":"9","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/index.js":"10","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/selectors.js":"11","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/types.js":"12","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/actions.js":"13","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/reducers.js":"14","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Register.js":"15","/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/schemas.js":"16","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/TextInput.js":"17","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/Error.js":"18","/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/API.js":"19","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/AppRoutes.js":"20","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/ProtectedRoute.js":"21","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/Page404.js":"22","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/index.js":"23","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/reducers.js":"24","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/selectors.js":"25","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/actions.js":"26","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/types.js":"27","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/NewSituation.js":"28","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/TextArea.js":"29","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/DateInput.js":"30"},{"size":714,"mtime":1610454777094,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1608212955588,"results":"33","hashOfConfig":"32"},{"size":328,"mtime":1611136676103,"results":"34","hashOfConfig":"32"},{"size":1350,"mtime":1611841215295,"results":"35","hashOfConfig":"32"},{"size":2422,"mtime":1611136288808,"results":"36","hashOfConfig":"32"},{"size":520,"mtime":1611075540912,"results":"37","hashOfConfig":"32"},{"size":3983,"mtime":1611135132406,"results":"38","hashOfConfig":"32"},{"size":281,"mtime":1610457634687,"results":"39","hashOfConfig":"32"},{"size":156,"mtime":1611138523778,"results":"40","hashOfConfig":"32"},{"size":210,"mtime":1610454352150,"results":"41","hashOfConfig":"32"},{"size":323,"mtime":1611074241738,"results":"42","hashOfConfig":"32"},{"size":159,"mtime":1611135514953,"results":"43","hashOfConfig":"32"},{"size":411,"mtime":1611135514950,"results":"44","hashOfConfig":"32"},{"size":379,"mtime":1611135514946,"results":"45","hashOfConfig":"32"},{"size":3584,"mtime":1611135132410,"results":"46","hashOfConfig":"32"},{"size":1798,"mtime":1611844655190,"results":"47","hashOfConfig":"32"},{"size":354,"mtime":1610456752455,"results":"48","hashOfConfig":"32"},{"size":246,"mtime":1611073615469,"results":"49","hashOfConfig":"32"},{"size":299,"mtime":1611137890284,"results":"50","hashOfConfig":"32"},{"size":688,"mtime":1611841645874,"results":"51","hashOfConfig":"32"},{"size":994,"mtime":1611074185820,"results":"52","hashOfConfig":"32"},{"size":276,"mtime":1611136676107,"results":"53","hashOfConfig":"32"},{"size":210,"mtime":1611137859650,"results":"54","hashOfConfig":"32"},{"size":383,"mtime":1611138523782,"results":"55","hashOfConfig":"32"},{"size":205,"mtime":1611137859631,"results":"56","hashOfConfig":"32"},{"size":288,"mtime":1611138553034,"results":"57","hashOfConfig":"32"},{"size":147,"mtime":1611137859636,"results":"58","hashOfConfig":"32"},{"size":4555,"mtime":1611847089301,"results":"59","hashOfConfig":"32"},{"size":478,"mtime":1611846644347,"results":"60","hashOfConfig":"32"},{"size":374,"mtime":1611842492403,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ionm3w",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"64"},"/Users/yamnyk/IdeaProjects/sum-up/client/src/index.js",[],["140","141"],"/Users/yamnyk/IdeaProjects/sum-up/client/src/reportWebVitals.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/App.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Home.js",["142","143"],"import React, {useEffect} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {daysActions, daysSelectors} from \"../redux/days\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 4, 6),\n  }\n}))\n\nconst Home = ({history}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const days = useSelector(daysSelectors.all);\n  \n  const handleCreateSituation = (e) => {\n    e.preventDefault();\n    \n    history.push('/new');\n  }\n  \n  useEffect(() => {\n    dispatch(daysActions.getAll());\n  }, []);\n  \n  return (\n    <>\n      <Container className={classes.heroContent}>\n        <Typography component=\"h4\" variant=\"h2\" color=\"textPrimary\" gutterBottom>\n          All your days\n        </Typography>\n        <Typography color=\"textSecondary\" paragraph>\n          Here you can find all of the days you created. To take a closer look click a 'details' button.\n        </Typography>\n  \n        <Button variant=\"outlined\" onClick={handleCreateSituation}>+</Button>\n        \n      </Container>\n    </>\n  );\n};\n\nexport default Home;","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Header.js",["144","145"],"import React from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {makeStyles} from \"@material-ui/core\";\nimport {default as MaterialLink} from \"@material-ui/core/Link\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userActions, userSelectors} from \"../redux/user\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  logo: {\n    textDecoration: 'none',\n    color: theme.palette.text.primary,\n    transition: 'color 0.3s',\n    '&:visited': {\n      color: theme.palette.text.primary\n    },\n    '&:hover': {\n      color: theme.palette.text.hint\n    }\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isAuth = useSelector(userSelectors.isAuth);\n  \n  const handleLogout = () => dispatch(userActions.logout())\n  \n  const btn = !isAuth\n    ? <Button color=\"primary\" to='/login' component={Link} variant=\"outlined\" className={classes.link}>\n      Login\n    </Button>\n    : <Button color=\"primary\" variant=\"outlined\" className={classes.link} onClick={handleLogout}>\n      Logout\n    </Button>\n  \n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n          <Link to='/' className={classes.logo}>SUM-UP</Link>\n        </Typography>\n        <nav>\n          <MaterialLink variant=\"button\" color=\"textPrimary\" to=\"/situations\" component={Link} className={classes.link}>\n            Situations\n          </MaterialLink>\n          <MaterialLink variant=\"button\" color=\"textPrimary\" to=\"/pleasures\" component={Link} className={classes.link}>\n            Pleasures\n          </MaterialLink>\n        </nav>\n        {btn}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Footer.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Login.js",["146","147","148"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport {default as MaterialLink} from \"@material-ui/core/Link\";\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport schemas from \"../utils/schemas\";\nimport TextInput from \"../components/Formik/TextInput\";\nimport Error from \"../components/Formik/Error\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userActions, userSelectors} from \"../redux/user\";\nimport {Link} from \"react-router-dom\";\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    color: theme.palette.error.main\n  }\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const error = useSelector(userSelectors.error);\n  const handleSingIn = async (form, {setSubmitting}) => {\n    dispatch(userActions.saveUser(form, setSubmitting))\n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon/>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Formik\n          initialValues={{\n            email: '',\n            password: ''\n          }}\n          validationSchema={schemas.login}\n          onSubmit={handleSingIn}\n        >\n          {\n            formikProps => (\n              <Form className={classes.form} noValidate>\n                <span className={classes.error}>{error}</span>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <Error name='email' classes={classes.error}/>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Error name='password' classes={classes.error}/>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Sign In\n                </Button>\n                <Grid container>\n                  <Grid item>\n                    <MaterialLink href=\"/register\" component={(props) => <Link {...props} to={props.href}/>} variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </MaterialLink>\n                  </Grid>\n                </Grid>\n              </Form>\n            )\n          }\n        </Formik>\n      </div>\n    </Container>\n  );\n}","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/store.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/rootReducer.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/index.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/selectors.js",["149"],"const selectIsAuth = currentStore => !!currentStore.user && typeof currentStore.user === 'string';\nconst selectUser = currentStore => currentStore.user;\nconst selectError = currentStore => currentStore.user && currentStore.user.message;\n\nexport default {\n  isAuth: selectIsAuth,\n  user: selectUser,\n  error: selectError,\n}\n","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/types.js",["150"],"const SAVE_USER = \"SAVE_USER\";\nconst ERROR_USER = \"ERROR_USER\";\nconst LOGOUT_USER = 'LOGOUT_USER';\n\nexport default {\n  SAVE_USER,\n  ERROR_USER,\n  LOGOUT_USER\n}","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/actions.js",["151"],"import types from './types'\nimport API from \"../../utils/API\";\n\nconst saveUserAction = (user, setSubmitting) => dispatch => {\n  API.login(user)\n    .then(r => {\n      dispatch({\n        type: types.SAVE_USER,\n        payload: r.data\n      });\n    })\n}\n\nexport default {\n  saveUser: saveUserAction\n}\n","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/reducers.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Register.js",["152"],"import React from 'react';\nimport {Container} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Field, Form, Formik} from \"formik\";\nimport schemas from \"../utils/schemas\";\nimport TextInput from \"../components/Formik/TextInput\";\nimport Error from \"../components/Formik/Error\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {default as MaterialLink} from \"@material-ui/core/Link\";\nimport {userActions, userSelectors} from \"../redux/user\";\nimport {useStyles} from \"./Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nconst Register = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const error = useSelector(userSelectors.error);\n  const handleSingIn = async (form, {setSubmitting}) => {\n    dispatch(userActions.saveUser(form, setSubmitting))\n  }\n  \n  return (\n    <Container maxWidth='xs'>\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <Formik\n          initialValues={{\n            email: '',\n            password: ''\n          }}\n          validationSchema={schemas.register}\n          onSubmit={handleSingIn}\n        >\n          {\n            formikProps => (\n              <Form className={classes.form} noValidate>\n                <span className={classes.error}>{error}</span>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"name\"\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <Error name='name' classes={classes.error}/>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <Error name='email' classes={classes.error}/>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Error name='password' classes={classes.error}/>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Sign In\n                </Button>\n                <Grid container>\n                  <Grid item>\n                    <MaterialLink to=\"/login\" component={Link} variant=\"body2\">\n                      {\"Already have an account? Sign In\"}\n                    </MaterialLink>\n                  </Grid>\n                </Grid>\n              </Form>\n            )\n          }\n        </Formik>\n      </div>\n    </Container>\n  );\n};\n\nexport default Register;","/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/schemas.js",["153"],"import * as yup from 'yup';\n\nconst loginSchema = yup.object().shape({\n  email: yup\n    .string(\"Value must be a string\")\n    .email(\"It should be a valid email\")\n    .required(\"This value is required\"),\n  \n  password: yup\n    .string(\"Value must be a string\")\n    .min(6, 'Minimal length is 3 characters')\n    .required(\"This value is required\"),\n});\n\nconst registerSchema = yup.object().shape({\n  name: yup\n    .string(\"Value must be a string\")\n    .min(3, 'Minimal length is 3 characters')\n    .required(\"This value is required\"),\n  \n  email: yup\n    .string(\"Value must be a string\")\n    .email(\"It should be a valid email\")\n    .required(\"This value is required\"),\n  \n  password: yup\n    .string(\"Value must be a string\")\n    .min(6, 'Minimal length is 3 characters')\n    .required(\"This value is required\")\n})\n\nconst createSituation = yup.object().shape({\n  situationName: yup\n    .string(\"Should be a valid string\")\n    .min(10, 'Minimal length is 10 characters')\n    .required(\"this value is required\"),\n  \n  day: yup\n    .date(\"Should be a valid date\")\n    .min(10, 'Minimal length is 10 characters')\n    .required(\"This value is required\"),\n  \n  reasons: yup\n    .string(\"Should be a valid string\")\n    .min(10, 'Minimal length is 10 characters')\n    .required(\"this value is required\"),\n  \n  positives: yup\n    .string(\"Should be a valid string\")\n    .min(10, 'Minimal length is 10 characters')\n    .required(\"this value is required\"),\n  \n  rationals: yup\n    .string(\"Should be a valid string\")\n    .min(10, 'Minimal length is 10 characters')\n    .required(\"this value is required\"),\n  \n  subconscious: yup\n    .string(\"Should be a valid string\")\n    .min(10, 'Minimal length is 10 characters'),\n})\n\nexport default {\n  login: loginSchema,\n  register: registerSchema,\n  createSituation,\n}","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/TextInput.js",["154","155","156","157"],"import React from 'react';\nimport styled from 'styled-components';\nimport {ErrorMessage, Form} from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst TextInput = ({form, field, ...rest}) => {\n  const {name} = field;\n  \n  return (\n    <>\n      <TextField\n        {...field} {...rest}\n      />\n    </>\n  );\n};\n\nexport default TextInput;","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/Error.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/API.js",["158"],"import axios from 'axios';\n\nconst getDays = async (token) => {\n  return await axios\n    .get('/days', {\n      headers: {\n        'authorization': token\n      }\n    })\n}\n\nconst login = async (user) => {\n  return await axios\n    .post('/users/login', user)\n}\n\nexport default {\n  login,\n  getDays,\n  \n}",["159","160"],"/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/AppRoutes.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/ProtectedRoute.js",["161"],"import React, {Component} from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {useSelector} from \"react-redux\";\nimport {userSelectors} from \"../redux/user\";\n\nconst ProtectedRoute = ({component: ComponentToRoute, protectedRender, path, ...restProps}) => {\n  const isAuth = useSelector(userSelectors.isAuth);\n  \n  return (\n    <Route {...restProps} render={(routerProps) => {\n      if (path === '/login' && isAuth) return <Redirect to=\"/\"/>\n      if (path === '/login' && !isAuth) return <ComponentToRoute {...routerProps}/>\n      if (!isAuth) {\n        return <Redirect to=\"/login\"/>\n      } else if (ComponentToRoute) {\n        return <ComponentToRoute {...routerProps}/>\n      } else if (protectedRender) {\n        return protectedRender(routerProps)\n      } else {\n        throw new TypeError('No any component to render')\n      }\n    }}/>\n  );\n}\n\nexport default ProtectedRoute;\n\nProtectedRoute.propTypes = {\n  render: PropTypes.func\n};\n","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/Page404.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/index.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/reducers.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/selectors.js",["162"],"const selectAllDays = currentStore => currentStore.days;\nconst selectError = currentStore => currentStore.user && currentStore.user.message;\n\nexport default {\n  all: selectAllDays,\n  error: selectError,\n}\n","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/actions.js",["163"],"import types from './types'\nimport API from \"../../utils/API\";\n\nconst getDays = () => (dispatch, getState) => {\n  API.getDays(getState().user)\n    .then(r => {\n      dispatch({\n        type: types.SAVE_DAYS,\n        payload: r.data\n      })\n    })\n}\n\nexport default {\n  getAll: getDays\n}\n","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/days/types.js",["164"],"const SAVE_DAYS = \"SAVE_DAYS\";\nconst SAVE_DAY = \"SAVE_DAY\";\nconst ERROR_DAY = \"ERROR_DAY\";\n\nexport default {\n  SAVE_DAYS,\n  SAVE_DAY,\n  ERROR_DAY\n}","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/NewSituation.js",["165"],"import React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core\";\nimport schemas from \"../utils/schemas\";\nimport {Field, Form, Formik} from \"formik\";\nimport TextInput from \"../components/Formik/TextInput\";\nimport Error from \"../components/Formik/Error\";\nimport Button from \"@material-ui/core/Button\";\nimport {useSelector} from \"react-redux\";\nimport {userSelectors} from \"../redux/user\";\nimport TextArea from \"../components/Formik/TextArea\";\nimport DateInput from \"../components/Formik/DateInput\";\n\nconst useStyles = makeStyles(theme => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 4, 6),\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  textarea: {\n    ...theme.typography.body1,\n    boxSizing: 'border-box',\n    padding: theme.spacing(2,2),\n    width: '100%',\n    height: '450px',\n    resize: 'none',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    color: theme.palette.error.main\n  }\n}))\n\nconst NewSituation = () => {\n  const classes = useStyles();\n  const error = useSelector(userSelectors.error);\n  \n  const handleCreate = (form) => {\n    debugger\n  };\n  \n  return (\n    <Container className={classes.heroContent}>\n      <Formik\n        initialValues={{\n          situationName: '',\n          day: '',\n          reasons: '',\n          positives: '',\n          rationals: '',\n          subconscious: ''\n        }}\n        validationSchema={schemas.createSituation}\n        onSubmit={handleCreate}\n      >\n        {\n          formikProps => (\n            <Form className={classes.form} noValidate>\n              <span className={classes.error}>{error}</span>\n              <Field\n                component={TextInput}\n                variant=\"outlined\"\n                margin=\"normal\"\n                multiline\n                required\n                fullWidth\n                id=\"situationName\"\n                label=\"Situation\"\n                name=\"situationName\"\n                autoFocus\n              />\n              <Error name='situationName' classes={classes.error}/>\n              <Field\n                component={DateInput}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"day\"\n                id=\"day\"\n              />\n              <Error name='password' classes={classes.error}/>\n              <Field\n                component={TextInput}\n                variant=\"outlined\"\n                margin=\"normal\"\n                multiline\n                required\n                fullWidth\n                id=\"reasons\"\n                label=\"Reasons\"\n                name=\"reasons\"\n                autoFocus\n              />\n              <Error name='reasons' classes={classes.error}/>\n              <Field\n                component={TextInput}\n                variant=\"outlined\"\n                margin=\"normal\"\n                multiline\n                required\n                fullWidth\n                id=\"positives\"\n                label=\"Positives\"\n                name=\"positives\"\n                autoFocus\n              />\n              <Error name='positives' classes={classes.error}/>\n              <Field\n                component={TextInput}\n                variant=\"outlined\"\n                margin=\"normal\"\n                multiline\n                required\n                fullWidth\n                id=\"rationals\"\n                label=\"Rationals\"\n                name=\"rationals\"\n                autoFocus\n              />\n              <Error name='rationals' classes={classes.error}/>\n              <Field\n                component={TextInput}\n                variant=\"outlined\"\n                margin=\"normal\"\n                multiline\n                required\n                fullWidth\n                id=\"subconscious\"\n                label=\"Subconscious\"\n                name=\"subconscious\"\n                autoFocus\n              />\n              <Error name='subconscious' classes={classes.error}/>\n              <Button\n                type=\"submit\"\n                fullWidth\n                disabled={!formikProps.isValid || formikProps.isSubmitting}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n            </Form>\n          )\n        }\n      </Formik>\n    </Container>\n  );\n};\n\nexport default NewSituation;","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/TextArea.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/DateInput.js",["166","167","168","169"],"import React from 'react';\nimport styled from 'styled-components';\nimport {ErrorMessage, Form} from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst TextInput = ({form, field, ...rest}) => {\n  const {name} = field;\n  \n  return (\n    <>\n      <TextField\n        {...field} {...rest}\n        type=\"date\"\n      />\n    </>\n  );\n};\n\nexport default TextInput;",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":19,"column":9,"nodeType":"176","messageId":"177","endLine":19,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":29,"column":6,"nodeType":"180","endLine":29,"endColumn":8,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":18},{"ruleId":"174","severity":1,"message":"183","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":16},{"ruleId":"174","severity":1,"message":"184","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":17},{"ruleId":"174","severity":1,"message":"185","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":11},{"ruleId":"174","severity":1,"message":"186","line":13,"column":9,"nodeType":"176","messageId":"177","endLine":13,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":5,"column":1,"nodeType":"189","endLine":9,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":5,"column":1,"nodeType":"189","endLine":9,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":14,"column":1,"nodeType":"189","endLine":16,"endColumn":2},{"ruleId":"174","severity":1,"message":"190","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":63,"column":1,"nodeType":"189","endLine":67,"endColumn":2},{"ruleId":"174","severity":1,"message":"191","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"186","line":3,"column":9,"nodeType":"176","messageId":"177","endLine":3,"endColumn":21},{"ruleId":"174","severity":1,"message":"192","line":3,"column":23,"nodeType":"176","messageId":"177","endLine":3,"endColumn":27},{"ruleId":"174","severity":1,"message":"193","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":17,"column":1,"nodeType":"189","endLine":21,"endColumn":2},{"ruleId":"170","replacedBy":"194"},{"ruleId":"172","replacedBy":"195"},{"ruleId":"174","severity":1,"message":"196","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":4,"column":1,"nodeType":"189","endLine":7,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":14,"column":1,"nodeType":"189","endLine":16,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":5,"column":1,"nodeType":"189","endLine":9,"endColumn":2},{"ruleId":"174","severity":1,"message":"197","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":16},{"ruleId":"174","severity":1,"message":"191","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"186","line":3,"column":9,"nodeType":"176","messageId":"177","endLine":3,"endColumn":21},{"ruleId":"174","severity":1,"message":"192","line":3,"column":23,"nodeType":"176","messageId":"177","endLine":3,"endColumn":27},{"ruleId":"174","severity":1,"message":"193","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":14},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'days' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'ErrorMessage' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Avatar' is defined but never used.","'styled' is defined but never used.","'Form' is defined but never used.","'name' is assigned a value but never used.",["198"],["199"],"'Component' is defined but never used.","'TextArea' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},"Update the dependencies array to be: [dispatch]",{"range":"203","text":"204"},[820,822],"[dispatch]"]