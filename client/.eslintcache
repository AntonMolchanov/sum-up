[{"/Users/yamnyk/IdeaProjects/sum-up/client/src/index.js":"1","/Users/yamnyk/IdeaProjects/sum-up/client/src/reportWebVitals.js":"2","/Users/yamnyk/IdeaProjects/sum-up/client/src/App.js":"3","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Home.js":"4","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Header.js":"5","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Footer.js":"6","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Login.js":"7","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/store.js":"8","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/rootReducer.js":"9","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/index.js":"10","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/selectors.js":"11","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/types.js":"12","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/actions.js":"13","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/reducers.js":"14","/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Register.js":"15","/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/schemas.js":"16","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/TextInput.js":"17","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/Error.js":"18","/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/API.js":"19","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/AppRoutes.js":"20","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/ProtectedRoute.js":"21","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/Page404.js":"22"},{"size":714,"mtime":1610454777094,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1608212955588,"results":"25","hashOfConfig":"24"},{"size":328,"mtime":1611136676103,"results":"26","hashOfConfig":"24"},{"size":126,"mtime":1610119504646,"results":"27","hashOfConfig":"24"},{"size":2422,"mtime":1611136288808,"results":"28","hashOfConfig":"24"},{"size":520,"mtime":1611075540912,"results":"29","hashOfConfig":"24"},{"size":3983,"mtime":1611135132406,"results":"30","hashOfConfig":"24"},{"size":281,"mtime":1610457634687,"results":"31","hashOfConfig":"24"},{"size":115,"mtime":1610454878874,"results":"32","hashOfConfig":"24"},{"size":210,"mtime":1610454352150,"results":"33","hashOfConfig":"24"},{"size":323,"mtime":1611074241738,"results":"34","hashOfConfig":"24"},{"size":159,"mtime":1611135514953,"results":"35","hashOfConfig":"24"},{"size":411,"mtime":1611135514950,"results":"36","hashOfConfig":"24"},{"size":379,"mtime":1611135514946,"results":"37","hashOfConfig":"24"},{"size":3584,"mtime":1611135132410,"results":"38","hashOfConfig":"24"},{"size":673,"mtime":1610456080420,"results":"39","hashOfConfig":"24"},{"size":354,"mtime":1610456752455,"results":"40","hashOfConfig":"24"},{"size":246,"mtime":1611073615469,"results":"41","hashOfConfig":"24"},{"size":191,"mtime":1611136070273,"results":"42","hashOfConfig":"24"},{"size":586,"mtime":1611136817043,"results":"43","hashOfConfig":"24"},{"size":994,"mtime":1611074185820,"results":"44","hashOfConfig":"24"},{"size":276,"mtime":1611136676107,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ionm3w",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yamnyk/IdeaProjects/sum-up/client/src/index.js",[],["98","99"],"/Users/yamnyk/IdeaProjects/sum-up/client/src/reportWebVitals.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/App.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Home.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Header.js",["100","101"],"/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Footer.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Login.js",["102","103","104"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport {default as MaterialLink} from \"@material-ui/core/Link\";\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport schemas from \"../utils/schemas\";\nimport TextInput from \"../components/Formik/TextInput\";\nimport Error from \"../components/Formik/Error\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userActions, userSelectors} from \"../redux/user\";\nimport {Link} from \"react-router-dom\";\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    color: theme.palette.error.main\n  }\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const error = useSelector(userSelectors.error);\n  const handleSingIn = async (form, {setSubmitting}) => {\n    dispatch(userActions.saveUser(form, setSubmitting))\n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon/>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Formik\n          initialValues={{\n            email: '',\n            password: ''\n          }}\n          validationSchema={schemas.login}\n          onSubmit={handleSingIn}\n        >\n          {\n            formikProps => (\n              <Form className={classes.form} noValidate>\n                <span className={classes.error}>{error}</span>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <Error name='email' classes={classes.error}/>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Error name='password' classes={classes.error}/>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Sign In\n                </Button>\n                <Grid container>\n                  <Grid item>\n                    <MaterialLink href=\"/register\" component={(props) => <Link {...props} to={props.href}/>} variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </MaterialLink>\n                  </Grid>\n                </Grid>\n              </Form>\n            )\n          }\n        </Formik>\n      </div>\n    </Container>\n  );\n}","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/store.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/rootReducer.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/index.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/selectors.js",["105"],"const selectIsAuth = currentStore => !!currentStore.user && typeof currentStore.user === 'string';\nconst selectUser = currentStore => currentStore.user;\nconst selectError = currentStore => currentStore.user && currentStore.user.message;\n\nexport default {\n  isAuth: selectIsAuth,\n  user: selectUser,\n  error: selectError,\n}\n","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/types.js",["106"],"/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/actions.js",["107"],"import types from './types'\nimport API from \"../../utils/API\";\n\nconst saveUserAction = (user, setSubmitting) => dispatch => {\n  API.login(user)\n    .then(r => {\n      dispatch({\n        type: types.SAVE_USER,\n        payload: r.data\n      });\n    })\n}\n\nexport default {\n  saveUser: saveUserAction\n}\n","/Users/yamnyk/IdeaProjects/sum-up/client/src/redux/user/reducers.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/pages/Register.js",["108"],"import React from 'react';\nimport {Container} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Field, Form, Formik} from \"formik\";\nimport schemas from \"../utils/schemas\";\nimport TextInput from \"../components/Formik/TextInput\";\nimport Error from \"../components/Formik/Error\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {default as MaterialLink} from \"@material-ui/core/Link\";\nimport {userActions, userSelectors} from \"../redux/user\";\nimport {useStyles} from \"./Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nconst Register = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const error = useSelector(userSelectors.error);\n  const handleSingIn = async (form, {setSubmitting}) => {\n    dispatch(userActions.saveUser(form, setSubmitting))\n  }\n  \n  return (\n    <Container maxWidth='xs'>\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <Formik\n          initialValues={{\n            email: '',\n            password: ''\n          }}\n          validationSchema={schemas.register}\n          onSubmit={handleSingIn}\n        >\n          {\n            formikProps => (\n              <Form className={classes.form} noValidate>\n                <span className={classes.error}>{error}</span>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"name\"\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <Error name='name' classes={classes.error}/>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <Error name='email' classes={classes.error}/>\n                <Field\n                  component={TextInput}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Error name='password' classes={classes.error}/>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Sign In\n                </Button>\n                <Grid container>\n                  <Grid item>\n                    <MaterialLink to=\"/login\" component={Link} variant=\"body2\">\n                      {\"Already have an account? Sign In\"}\n                    </MaterialLink>\n                  </Grid>\n                </Grid>\n              </Form>\n            )\n          }\n        </Formik>\n      </div>\n    </Container>\n  );\n};\n\nexport default Register;","/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/schemas.js",["109"],"import * as yup from 'yup';\n\nconst loginSchema = yup.object().shape({\n  email: yup\n    .string(\"Value must be a string\")\n    .email(\"It should be a valid email\"),\n  password: yup\n    .string(\"Value must be a string\")\n    .min(6, 'Minimal length is 3 characters')\n});\n\nconst registerSchema = yup.object().shape({\n  name: yup\n    .string(\"Value must be a string\")\n    .min(3, 'Minimal length is 3 characters'),\n  email: yup\n    .string(\"Value must be a string\")\n    .email(\"It should be a valid email\"),\n  password: yup\n    .string(\"Value must be a string\")\n    .min(6, 'Minimal length is 3 characters')\n})\n\nexport default {\n  login: loginSchema,\n  register: registerSchema\n}","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/TextInput.js",["110","111","112","113"],"import React from 'react';\nimport styled from 'styled-components';\nimport {ErrorMessage, Form} from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst TextInput = ({form, field, ...rest}) => {\n  const {name} = field;\n  \n  return (\n    <>\n      <TextField\n        {...field} {...rest}\n      />\n    </>\n  );\n};\n\nexport default TextInput;","/Users/yamnyk/IdeaProjects/sum-up/client/src/components/Formik/Error.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/utils/API.js",["114"],"import axios from 'axios';\n\nconst getDays = async () => {\n\n}\n\nconst login = async (user) => {\n  return await axios\n    .post('/users/login', user)\n}\n\nexport default {\n  login,\n  getDays,\n  \n}","/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/AppRoutes.js",[],"/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/ProtectedRoute.js",["115"],"/Users/yamnyk/IdeaProjects/sum-up/client/src/routing/Page404.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":16},{"ruleId":"120","severity":1,"message":"125","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":17},{"ruleId":"120","severity":1,"message":"126","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":11},{"ruleId":"120","severity":1,"message":"127","line":13,"column":9,"nodeType":"122","messageId":"123","endLine":13,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":5,"column":1,"nodeType":"130","endLine":9,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":5,"column":1,"nodeType":"130","endLine":9,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":14,"column":1,"nodeType":"130","endLine":16,"endColumn":2},{"ruleId":"120","severity":1,"message":"131","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":15,"column":1,"nodeType":"130","endLine":17,"endColumn":2},{"ruleId":"120","severity":1,"message":"132","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":3,"column":9,"nodeType":"122","messageId":"123","endLine":3,"endColumn":21},{"ruleId":"120","severity":1,"message":"133","line":3,"column":23,"nodeType":"122","messageId":"123","endLine":3,"endColumn":27},{"ruleId":"120","severity":1,"message":"134","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":12,"column":1,"nodeType":"130","endLine":16,"endColumn":2},{"ruleId":"120","severity":1,"message":"135","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'ErrorMessage' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Avatar' is defined but never used.","'styled' is defined but never used.","'Form' is defined but never used.","'name' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]